{"version":3,"sources":["Components/RangeSlider/index.jsx","context/TurnoverRate/TurnoverRateReducer.js","context/Type.js","context/TurnoverRate/TurnoverRateState.js","Components/TurnoverRate/index.js","Components/Button/index.js","Components/ResultBox/index.js","Components/SplitPane/\bindex.js","Components/Input/index.js","Layouts/FormLayout/index.js","Components/FormSignUp/index.jsx","services/validator.js","Components/ToolContent/index.js","Components/Hero/index.js","App.js","serviceWorker.js","index.js"],"names":["RangeSlider","min","max","defaultValue","label","step","onChange","tooltipText","name","useState","tooltipVisible","setTooltipVisible","value","setValue","handleOnChange","marksTemp","style","fontSize","fontWeight","color","transform","marks","className","justify","xl","span","order","display","alignItems","placement","title","overlayClassName","cursor","marginLeft","onAfterChange","TurnoverRateReducer","state","action","type","payload","turnoverRate","user","initialState","email","TurnoverRateContext","createContext","TurnoverRateProvider","children","useReducer","dispatch","Provider","clacTurnoverRate","rate","userSubmited","TurnoverRate","begin","end","leaving","values","setValues","useContext","handleChange","useEffect","toFixed","marginBottom","marginRight","ButtonGrove","props","ResultBox","href","target","rel","SplitPane","left","right","full","bgColor","backgroundColor","InputFiled","errors","placeholder","touched","handleBlur","onBlur","FormLayout","handleSubmit","onSubmit","Signup","validate","handleDone","setErrors","setTouched","evt","rest","error","e","preventDefault","formValidation","Object","keys","reduce","acc","key","newError","newTouched","length","every","t","validation","fieldName","fieldValue","trim","test","validator","ToolContent","Hero","src","alt","App","done","setDone","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.99302040.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./RangeSlider.css\";\nimport { Slider, Tooltip, Row, Col, InputNumber } from \"antd\";\nconst RangeSlider = ({\n  min,\n  max,\n  defaultValue,\n  label,\n  step,\n  onChange,\n  tooltipText,\n  name,\n}) => {\n  const [tooltipVisible, setTooltipVisible] = useState(defaultValue !== 0);\n  const [value, setValue] = useState(defaultValue);\n  const handleOnChange = (value) => {\n    setTooltipVisible(true);\n    setValue(value);\n    onChange(name, value);\n  };\n  const marksTemp = {};\n  marksTemp[`${min}`] = {\n    style: {\n      fontSize: \"13px\",\n      fontWeight: \" 500\",\n      color: \"#698194\",\n    },\n    label: <span>{min}</span>,\n  };\n  marksTemp[`${max}`] = {\n    style: {\n      fontSize: \"13px\",\n      fontWeight: \" 500\",\n      color: \"#698194\",\n      transform: \"translateX(-100%)\",\n    },\n    label: <span>{max}</span>,\n  };\n  const marks = { ...marksTemp };\n  const handleOnAfterChange = (value) => {\n    //Fire when onmouseup is fired\n  };\n  return (\n    <div className=\"rangeSlider-contianer\">\n      <Row justify=\"space-between\">\n        <Col\n          xl={{ span: 10, order: 1 }}\n          span={18}\n          order={1}\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <p>\n            {label}\n            <Tooltip\n              placement=\"top\"\n              title={tooltipText}\n              overlayClassName=\"icon-tooltip\"\n            >\n              <i\n                className=\"icon\"\n                style={{ cursor: \"pointer\", marginLeft: \"8px\" }}\n              >\n                \n              </i>\n            </Tooltip>\n          </p>\n        </Col>\n        <Col xl={{ span: 12, order: 2 }} span={24} order={3}>\n          <Slider\n            min={min}\n            max={max}\n            defaultValue={defaultValue}\n            step={step}\n            onChange={handleOnChange}\n            tooltipVisible={tooltipVisible}\n            marks={marks}\n            onAfterChange={handleOnAfterChange}\n            value={value}\n            className=\"input-range-slider\"\n            name={name}\n          />\n        </Col>\n        <Col\n          xl={{ span: 2, order: 3 }}\n          span={6}\n          order={2}\n          className=\"slider-input-right\"\n        >\n          <InputNumber\n            min={min}\n            max={max}\n            value={value}\n            onChange={handleOnChange}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default RangeSlider;\n","import { CALC_TURNOVER_RATE, USER_SUBMITED } from \"../Type\";\n\nconst TurnoverRateReducer = (state, action) => {\n  let { type, payload } = action;\n  switch (type) {\n    case CALC_TURNOVER_RATE:\n      return {\n        ...state,\n        turnoverRate: payload,\n      };\n    case USER_SUBMITED:\n      return {\n        ...state,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n};\nexport default TurnoverRateReducer;\n","export const CALC_TURNOVER_RATE = \"CALC_TURNOVER_RATE\";\nexport const USER_SUBMITED = \"USER_SUBMITED\";\n","import React, { createContext, useReducer } from \"react\";\nimport { CALC_TURNOVER_RATE, USER_SUBMITED } from \"../Type\";\nimport TurnoverRateReducer from \"./TurnoverRateReducer\";\n\n// Initial State\nconst initialState = {\n  user: {\n    name: \"hungtrinh\",\n    email: \"hungtrinh@kms-technology.com\",\n  },\n  turnoverRate: null,\n};\n// Create context\nexport const TurnoverRateContext = createContext(initialState);\n\n//Provider  components\n\nexport const TurnoverRateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(TurnoverRateReducer, initialState);\n\n  //Actions here:\n  const clacTurnoverRate = (rate) => {\n    dispatch({\n      type: CALC_TURNOVER_RATE,\n      payload: rate,\n    });\n  };\n\n  const userSubmited = (user) => {\n    dispatch({\n      type: USER_SUBMITED,\n      payload: user,\n    });\n  };\n  return (\n    <TurnoverRateContext.Provider\n      value={{\n        user: state.user,\n        turnoverRate: state.turnoverRate,\n        clacTurnoverRate,\n        userSubmited,\n      }}\n    >\n      {children}\n    </TurnoverRateContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport RangeSlider from \"../RangeSlider\";\nimport \"./TurnoverRate.css\";\nimport { TurnoverRateContext } from \"../../context/TurnoverRate/TurnoverRateState\";\nconst TurnoverRate = () => {\n  const [values, setValues] = useState({ begin: 0, end: 0, leaving: 0 });\n\n  const { clacTurnoverRate } = useContext(TurnoverRateContext);\n  const handleChange = (name, value) => {\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  useEffect(() => {\n    const { begin, end, leaving } = values;\n    if (leaving !== 0 && begin !== 0 && end !== 0) {\n      const rate = ((leaving / ((begin + end) / 2)) * 100).toFixed(2);\n      clacTurnoverRate(rate);\n    }\n  }, [values]);\n\n  return (\n    <div>\n      <div className=\"turnover-rate\" style={{ marginBottom: \"40px\" }}>\n        <span className=\"icon user-icon\" style={{ marginRight: \"18px\" }}>\n          \n        </span>\n        <span className=\"section-title\">Employee Turnover Rate </span>\n      </div>\n      <RangeSlider\n        min={0}\n        max={2000}\n        step={1}\n        defaultValue={0}\n        label=\"Beginning number of employees\"\n        tooltipText=\"Beginning number of employees\"\n        onChange={handleChange}\n        name=\"begin\"\n      />\n      <RangeSlider\n        min={0}\n        max={2000}\n        step={1}\n        defaultValue={0}\n        label=\"Ending number of employees\"\n        tooltipText=\"Ending number of employees\"\n        onChange={handleChange}\n        name=\"end\"\n      />\n      <RangeSlider\n        min={0}\n        max={2000}\n        step={1}\n        defaultValue={0}\n        label=\"Leaving number of employees\"\n        tooltipText=\"Leaving number of employees\"\n        onChange={handleChange}\n        name=\"leaving\"\n      />\n    </div>\n  );\n};\n\nexport default TurnoverRate;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst ButtonGrove = (props) => {\n  return (\n    <button type={props.type} className=\"button-primary\">\n      {props.label}\n    </button>\n  );\n};\n\nexport default ButtonGrove;\n","import React, { useContext } from \"react\";\nimport \"./ResultBox.css\";\nimport ButtonGrove from \"../Button\";\nimport { TurnoverRateContext } from \"../../context/TurnoverRate/TurnoverRateState\";\nconst ResultBox = () => {\n  const { turnoverRate } = useContext(TurnoverRateContext);\n  return (\n    <div className=\"result-box\">\n      <h2>Here is your Annual Turnover Rate </h2>\n      <p className=\"rate-result\">{turnoverRate}%</p>\n      <p>Reduce your turnover rate with our employee-first platform </p>\n      <a\n        href=\"https://portal.grovehr.com/sign-up\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <ButtonGrove label=\"Signup now\" type=\"button\" />\n      </a>\n      <p className=\"quote\">It’s 100% free, forever</p>\n    </div>\n  );\n};\n\nexport default ResultBox;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nimport \"./SplitPane.css\";\n\nconst SplitPane = ({ left, right, full, bgColor }) => {\n  return (\n    <div className=\"slitpane-container\">\n      {full ? (\n        <div className=\"splitpane-full\">\n          <div\n            className=\"sectionBorderStyle\"\n            style={{ backgroundColor: `${bgColor}` }}\n          >\n            {full}\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n      {left ? (\n        <div className=\"splitpane-left\">\n          <div className=\"sectionBorderStyle\">{left}</div>\n        </div>\n      ) : (\n        <></>\n      )}\n      {right ? (\n        <div className=\"splitpane-right\">\n          <div className=\"sectionBorderStyle\">{right}</div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nexport default SplitPane;\n","import React from \"react\";\nimport \"./Input.css\";\nconst InputFiled = ({\n  name,\n  values,\n  handleChange,\n  errors,\n  label,\n  placeholder,\n  touched,\n  handleBlur,\n}) => {\n  return (\n    <div className=\"input-wrp\">\n      <label>{label} *</label>\n      <div className=\" input-control input-effect\">\n        <input\n          className=\"effect-20\"\n          type=\"text\"\n          placeholder={placeholder}\n          name={name}\n          onChange={handleChange}\n          value={values[`${name}`]}\n          onBlur={handleBlur}\n        />\n        <span className=\"focus-border\">\n          <i />\n        </span>\n      </div>\n      <small>{touched[`${name}`] && errors[`${name}`]}</small>\n    </div>\n  );\n};\n\nexport default InputFiled;\n","import React from \"react\";\nimport ButtonGrove from \"../../Components/Button\";\nimport InputFiled from \"../../Components/Input\";\n\nconst FormLayout = ({\n  errors,\n  handleBlur,\n  handleChange,\n  handleSubmit,\n  values,\n  touched,\n}) => {\n  return (\n    <div className=\"signup-container\">\n      <h3 style={{ marginBottom: \"16px;\" }}>\n        Calculate Your Customer Lifetime Value In 30 Seconds!\n      </h3>\n      <form onSubmit={handleSubmit}>\n        <div style={{ marginBottom: \"24px\" }}>\n          <InputFiled\n            label=\"Name\"\n            placeholder=\"Name\"\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            values={values}\n            errors={errors}\n            touched={touched}\n            name=\"name\"\n          />\n          <InputFiled\n            label=\"Email\"\n            placeholder=\"example@company.com\"\n            handleChange={handleChange}\n            handleBlur={handleBlur}\n            values={values}\n            errors={errors}\n            name=\"email\"\n            touched={touched}\n          />\n        </div>\n        <ButtonGrove label=\"Calculate\" type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default FormLayout;\n","import React, { useState, useContext } from \"react\";\nimport { TurnoverRateContext } from \"../../context/TurnoverRate/TurnoverRateState\";\nimport \"../../Layouts/FormLayout\";\n\nimport FormLayout from \"../../Layouts/FormLayout\";\n\nconst Signup = ({ validate, handleDone }) => {\n  const [values, setValues] = useState({ name: \"\", email: \"\" });\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({ name: false, email: false });\n  const { userSubmited } = useContext(TurnoverRateContext);\n\n  // OnChange Handler\n  const handleChange = (e) => {\n    let { name, value } = e.target;\n\n    //Save field values\n    setValues({\n      ...values,\n      [name]: value,\n    });\n\n    // Was the field modified\n    setTouched({\n      ...touched,\n      [name]: true,\n    });\n  };\n\n  // Handle onBlur\n  const handleBlur = (evt) => {\n    const { name, value } = evt.target;\n\n    // remove whatever error was there previously\n    const { [name]: removedError, ...rest } = errors;\n\n    // check for a new error\n    const error = validate[`${name}`](value);\n\n    // // validate the field if the value has been touched\n    setErrors({\n      ...rest,\n      ...(error && { [name]: touched[name] && error }),\n    });\n  };\n\n  //OnSubmit Handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //validate the form\n    const formValidation = Object.keys(values).reduce(\n      (acc, key) => {\n        const newError = validate[key](values[key]);\n        const newTouched = { [key]: true };\n        return {\n          errors: {\n            ...acc.errors,\n            ...(newError && { [key]: newError }),\n          },\n          touched: {\n            ...acc.touched,\n            ...newTouched,\n          },\n        };\n      },\n      {\n        errors: { ...errors },\n        touched: { ...touched },\n      }\n    );\n    setErrors(formValidation.errors);\n    setTouched(formValidation.touched);\n\n    if (\n      !Object.values(formValidation.errors).length && // errors object is empty\n      Object.values(formValidation.touched).length ===\n        Object.values(values).length && // all fields were touched\n      Object.values(formValidation.touched).every((t) => t === true) // every touched field is true\n    ) {\n      handleDone(true);\n      userSubmited(values);\n    }\n  };\n\n  return (\n    <>\n      <FormLayout\n        handleBlur={handleBlur}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        values={values}\n        errors={errors}\n        touched={touched}\n      />\n    </>\n  );\n};\n\nexport default Signup;\n","const validation = (fieldName, fieldValue) => {\n  let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  if (fieldValue.trim() === \"\") {\n    return \"This field is required.\";\n  }\n  if (fieldName === \"email\") {\n    if (!re.test(fieldValue)) return \"Please enter a valid email address.\";\n  }\n  return null;\n};\n\nconst validator = {\n  name: (name) => validation(\"name\", name),\n  email: (email) => validation(\"email\", email),\n};\n\nexport default validator;\n","import React from \"react\";\nimport \"./ToolContent.css\";\nimport {Row,Col} from 'antd'\nconst ToolContent = () => {\n  return (\n    <div className=\"tool-content-wrp\">\n      <div className=\"tool-content-item\">\n        <p className=\"tool-content__title\">What is Employee Turnover Rate?</p>\n        <div className=\"tool-content__detail\">\n          <p className=\"tool-content-para\">\n            Employee turnover rate (also known as attrition rate, or exit rate)\n            is an HR metric used to measure the number of employees that leave\n            your company over a period (usually a monthly, quarterly, or annual\n            basis).\n          </p>\n          <p className=\"tool-content-para\">\n            This metric includes voluntary resignations, retirements,\n            dismissals, and more during the set period. A high turnover rate is\n            viewed negatively for many reasons. It could indicate you have a bad\n            workplace culture or show that you have a flawed recruitment\n            process.\n          </p>\n          <div className=\"tool-content-listing\">\n            <p>\n              Knowing your turnover rate can benefit your company in many ways.\n              It allows you to:\n            </p>\n            <ul>\n              <li>\n                <i className=\"icon\"></i>\n                <span>\n                  Measure the effectiveness of your recruitment process and make\n                  adjustments to hire most-fit candidates.\n                </span>\n              </li>\n              <li>\n                <i className=\"icon\"></i>\n                <span>\n                  Quantify the cost of losing an employee - not only in monetary\n                  terms but also in terms of your brand's reputation\n                </span>\n              </li>\n              <li>\n                <i className=\"icon\"></i>\n                <span>\n                Compare with the turnover rate benchmark to  get more insight on how to develop better HR strategies.\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"tool-content-item\">\n        <p className=\"tool-content__title\">What is Employee Turnover Rate?</p>\n        <div className=\"tool-content__detail\">\n          <div className=\"tool-content-listing\">\n            <p>\n              Our annual turnover rate calculator takes into account 2\n              variables: the number of employees leaving and the Average total\n              of your employees at the same year. Then you multiply the fraction\n              by 100 to get the percentage rate.\n            </p>\n            <ul>\n              <li>\n                <i className=\"icon\"></i>\n                <span>\n                  The number of employees leaving: To get this data, add up the\n                  total number of employees who left at a given period. (Most\n                  Human Resource Information Systems can help extract a list of\n                  employees who left within any given time period).\n                </span>\n              </li>\n              <li>\n                <i className=\"icon\"></i>\n                <span>\n                  The average number of employees: To calculate this, add the\n                  number of employees at the beginning of the year to the total\n                  number of employees at the end of year and divide by 2.\n                </span>\n              </li>\n            </ul>\n            <p className=\"tool-content-para\">\n              Here is an example: let’s say 15 employees left company Z in 2019\n              and the average number of employees in the company stands at 50.\n            </p>\n            <p className=\"tool-content-para\">\n              Using the employee turnover rate formula, we have: (15 / 50) X 100\n            </p>\n            <p className=\"tool-content-para\">\n              The calculation shows that company Z had a 30% turnover rate in\n              2019.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToolContent;\n","import React from \"react\";\nimport \"./Hero.css\";\nconst Hero = () => {\n  return (\n    <div className=\"hero-container\">\n      <div className=\"hero-content\">\n        <p>\n          As employee retention has become one of today's key HR focuses, more\n          companies are taking note of their turnover rate. By knowing the\n          number of employees that leave in a given period, these companies get\n          an insight into their recruitment process and employee welfare. <br/><br/>So how do you calculate employees’ turnover rate?\n        </p>\n      </div>\n      <div className=\"hero-image\" >\n        <img src=\"/images/tool_introduction-min.png\" alt=\"grovehr grove-tool turnover-rate\"/>\n      </div>\n    </div>\n  );\n};\n\nexport default Hero;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TurnoverRate from \"./Components/TurnoverRate\";\nimport ResultBox from \"./Components/ResultBox\";\nimport SplitPane from \"./Components/SplitPane/\bindex\";\nimport Signup from \"./Components/FormSignUp\";\nimport validator from \"./services/validator\";\nimport ToolContent from \"./Components/ToolContent\";\nimport Hero from \"./Components/Hero\";\nimport { TurnoverRateProvider } from \"./context/TurnoverRate/TurnoverRateState\";\n\nconst App = () => {\n  const [done, setDone] = useState(false);\n\n  const handleDone = (value) => {\n    setDone(value);\n  };\n  const style = { background: \"#0092ff\", padding: \"8px 0\" };\n  return (\n    <TurnoverRateProvider className=\"App\">\n      <SplitPane full={<Hero />} bgColor=\"#eef3f6\"/>\n      <SplitPane\n        left={<TurnoverRate />}\n        right={\n          !done ? (\n            <Signup validate={validator} handleDone={handleDone} />\n          ) : (\n            <ResultBox />\n          )\n        }\n      />\n\n      <SplitPane left={<ToolContent />} />\n    </TurnoverRateProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}